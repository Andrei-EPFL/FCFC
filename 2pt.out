Only in ./: 2pt.out
diff -r ../FCFC/etc/fcfc_2pt_box.conf ./etc/fcfc_2pt_box.conf
25c25,26
<     # * 1: FITS table.
---
>     # * 1: FITS table;
>     # * 2: HDF5 file.
38a40,41
> HDF5_GROUP      = 
>     # The group from the HDF5 file
Only in ../FCFC/etc: fcfc_2pt_box_fastpm.conf
Only in ../FCFC/etc: fcfc_2pt_box_SLICS.conf
Only in ../FCFC/etc: fcfc_2pt_box_SLICS_zspace.conf
diff -r ../FCFC/etc/fcfc_2pt.conf ./etc/fcfc_2pt.conf
14c14
< CATALOG         = ["/global/cscratch1/sd/avariu/desi/EZmock3gpc/lightcones/LC_20200514-unit-elg-3gpc-090.pipe"]
---
> CATALOG         = 
16c16
< CATALOG_LABEL   = [D]
---
> CATALOG_LABEL   = 
20c20
< CATALOG_TYPE    = [0]
---
> CATALOG_TYPE    = 
25c25,26
<     # * 1: FITS table.
---
>     # * 1: FITS table;
>     # * 2: HDF5 file.
33c34
< ASCII_FORMATTER = ["%f %f %f"]
---
> ASCII_FORMATTER = 
39c40,42
< POSITION        = [$1,$2,$3]
---
> HDF5_GROUP      = 
>     # The group from the HDF5 file
> POSITION        = 
52c55
< COORD_CONVERT   = [T]
---
> COORD_CONVERT   = 
62c65
< OMEGA_M         = 0.2589
---
> OMEGA_M         = 
84c87
< BINNING_SCHEME  = 1
---
> BINNING_SCHEME  = 
90c93
< PAIR_COUNT      = [DD]
---
> PAIR_COUNT      = 
95c98
< PAIR_COUNT_FILE = ["/global/cscratch1/sd/avariu/desi/EZmock3gpc/lightcones/LC_20200514-unit-elg-3gpc-090.pipe.dd"]
---
> PAIR_COUNT_FILE = 
100c103
< CF_ESTIMATOR    =
---
> CF_ESTIMATOR    = 
108c111
< MULTIPOLE_FILE  =
---
> MULTIPOLE_FILE  = 
126,128c129,131
< SEP_BIN_MIN     = 0
< SEP_BIN_MAX     = 200
< SEP_BIN_SIZE    = 1
---
> SEP_BIN_MIN     = 
> SEP_BIN_MAX     = 
> SEP_BIN_SIZE    = 
131c134
< MU_BIN_NUM      = 100
---
> MU_BIN_NUM      = 
141c144
< SQ_DIST_PREC    = 0
---
> SQ_DIST_PREC    = 
Only in ../FCFC/etc: fcfc_2pt_EZ1GPC.conf
Only in ../FCFC/etc: fcfc_2pt_X_box.conf
Only in ./etc: fcfc_hdf5.conf
Only in ./: FCFC_2PT
Only in ./: FCFC_2PT_BOX
Only in ./.git: COMMIT_EDITMSG
diff -r ../FCFC/.git/config ./.git/config
7c7
< 	url = git@github.com:cheng-zhao/FCFC.git
---
> 	url = git@github.com:Andrei-EPFL/FCFC.git
9,11d8
< [branch "master"]
< 	remote = origin
< 	merge = refs/heads/master
diff -r ../FCFC/.git/FETCH_HEAD ./.git/FETCH_HEAD
1c1
< 5d846996d5dfca36c8dee5015427757735c149f2		branch 'master' of github.com:cheng-zhao/FCFC
---
> 5d846996d5dfca36c8dee5015427757735c149f2		branch 'master' of github.com:Andrei-EPFL/FCFC
Binary files ../FCFC/.git/index and ./.git/index differ
diff -r ../FCFC/.git/logs/HEAD ./.git/logs/HEAD
1,2c1
< 0000000000000000000000000000000000000000 652f13094618490a02aceb63a3ee67c3c54aca5b Andrei-EPFL <andrei.variu@epfl.ch> 1611558516 -0800	clone: from git@github.com:cheng-zhao/FCFC.git
< 652f13094618490a02aceb63a3ee67c3c54aca5b 5d846996d5dfca36c8dee5015427757735c149f2 Andrei-EPFL <andrei.variu@epfl.ch> 1617863957 -0700	pull origin master: Fast-forward
---
> 0000000000000000000000000000000000000000 0a4d34e5537d8d99cbbeea9e2e5e86f43133e1e7 Andrei-EPFL <andrei.variu@epfl.ch> 1617870847 -0700	commit (initial): hdf5
diff -r ../FCFC/.git/logs/refs/heads/master ./.git/logs/refs/heads/master
1,2c1
< 0000000000000000000000000000000000000000 652f13094618490a02aceb63a3ee67c3c54aca5b Andrei-EPFL <andrei.variu@epfl.ch> 1611558516 -0800	clone: from git@github.com:cheng-zhao/FCFC.git
< 652f13094618490a02aceb63a3ee67c3c54aca5b 5d846996d5dfca36c8dee5015427757735c149f2 Andrei-EPFL <andrei.variu@epfl.ch> 1617863957 -0700	pull origin master: Fast-forward
---
> 0000000000000000000000000000000000000000 0a4d34e5537d8d99cbbeea9e2e5e86f43133e1e7 Andrei-EPFL <andrei.variu@epfl.ch> 1617870847 -0700	commit (initial): hdf5
Only in ../FCFC/.git/logs/refs/remotes/origin: HEAD
diff -r ../FCFC/.git/logs/refs/remotes/origin/master ./.git/logs/refs/remotes/origin/master
1c1
< 652f13094618490a02aceb63a3ee67c3c54aca5b 5d846996d5dfca36c8dee5015427757735c149f2 Andrei-EPFL <andrei.variu@epfl.ch> 1617863957 -0700	pull origin master: fast-forward
---
> 0000000000000000000000000000000000000000 5d846996d5dfca36c8dee5015427757735c149f2 Andrei-EPFL <andrei.variu@epfl.ch> 1617870865 -0700	pull origin master: storing head
Only in ./.git: MERGE_HEAD
Only in ./.git: MERGE_MODE
Only in ./.git: MERGE_MSG
Only in ./.git/objects: 05
Only in ./.git/objects: 08
Only in ./.git/objects: 0a
Only in ./.git/objects: 0d
Only in ./.git/objects: 10
Only in ../FCFC/.git/objects: 21
Only in ./.git/objects: 24
Only in ./.git/objects: 27
Only in ./.git/objects: 28
Only in ./.git/objects: 2a
Only in ./.git/objects: 2c
Only in ./.git/objects: 30
Only in ./.git/objects: 33
Only in ./.git/objects: 36
Only in ../FCFC/.git/objects: 3b
Only in ./.git/objects: 3e
Only in ./.git/objects: 3f
Only in ./.git/objects: 43
Only in ./.git/objects/46: 3e23e5e19b7c579716f98463b158bdd8110ad0
Only in ./.git/objects: 4c
Only in ./.git/objects: 54
Only in ./.git/objects: 55
Only in ../FCFC/.git/objects: 56
Only in ./.git/objects: 5a
Only in ./.git/objects/5b: 0c29518d539875904239d1cbb0e7cde50d26dd
Only in ./.git/objects: 5c
Only in ../FCFC/.git/objects: 5d
Only in ../FCFC/.git/objects: 5e
Only in ./.git/objects: 61
Only in ./.git/objects: 64
Only in ./.git/objects: 69
Only in ./.git/objects: 6a
Only in ../FCFC/.git/objects: 6b
Only in ./.git/objects: 6c
Only in ../FCFC/.git/objects: 73
Only in ../FCFC/.git/objects: 78
Only in ./.git/objects: 79
Only in ./.git/objects: 7a
Only in ./.git/objects: 83
Only in ../FCFC/.git/objects/86: 1c08dddc56fc6ea53850257526dcf52927cb11
Only in ./.git/objects/86: 2a248bf7d826b3399bbd89b7d1fc665489dcc7
Only in ./.git/objects/86: fb089806cc720569d7da590e8c7b588af31dff
Only in ../FCFC/.git/objects: 87
Only in ./.git/objects: 89
Only in ./.git/objects: 8a
Only in ./.git/objects: 91
Only in ./.git/objects: 97
Only in ./.git/objects: 9b
Only in ./.git/objects: 9c
Only in ./.git/objects: 9e
Only in ./.git/objects: a5
Only in ./.git/objects: a9
Only in ../FCFC/.git/objects: ac
Only in ./.git/objects: ad
Only in ./.git/objects: b0
Only in ./.git/objects: b5
Only in ./.git/objects: b6
Only in ./.git/objects: b7
Only in ./.git/objects: b8
Only in ../FCFC/.git/objects: b9
Only in ./.git/objects: bb
Only in ./.git/objects: be
Only in ./.git/objects: bf
Only in ./.git/objects: c2
Only in ./.git/objects: c4
Only in ../FCFC/.git/objects: c6
Only in ../FCFC/.git/objects: cb
Only in ./.git/objects: cd
Only in ./.git/objects: ce
Only in ./.git/objects: d0
Only in ../FCFC/.git/objects: d1
Only in ../FCFC/.git/objects: d3
Only in ./.git/objects: d6
Only in ./.git/objects/d7: 222c4b8d133f1ecf77f7b67a54211c466c1c86
Only in ../FCFC/.git/objects/d7: 349a54227e106d4e73b44ba246d9ecffa29a0b
Only in ./.git/objects: d8
Only in ./.git/objects/da: 48c13dc7512b095c8228cfe5c84ba990fc0e5e
Only in ../FCFC/.git/objects/da: 9dd01e8c8f60eb4c5522dd3cdc096653c5cdcf
Only in ../FCFC/.git/objects/da: b6cd07df043b167e538c1ab2e3f03d7cdccb07
Only in ./.git/objects: dd
Only in ../FCFC/.git/objects/de: 8801cab45846611f26ff46b50d6b9099e1c8aa
Only in ./.git/objects/de: b4a23eabe1112d2925d223626d75e24289770e
Only in ./.git/objects: df
Only in ../FCFC/.git/objects: e0
Only in ./.git/objects: e1
Only in ./.git/objects: e5
Only in ./.git/objects: e9
Only in ./.git/objects: ea
Only in ./.git/objects: ec
Only in ./.git/objects: ef
Only in ./.git/objects: f0
Only in ./.git/objects: f1
Only in ./.git/objects: f6
Only in ./.git/objects: fa
Only in ./.git/objects: fc
Only in ./.git/objects: fe
Only in ./.git/objects/pack: pack-13661c0052d1120480ff4d89f032ad8aca2f9664.idx
Only in ./.git/objects/pack: pack-13661c0052d1120480ff4d89f032ad8aca2f9664.pack
Only in ../FCFC/.git/objects/pack: pack-73b6b1d6cfd7c728f1f4b3472575fd66d9279e60.idx
Only in ../FCFC/.git/objects/pack: pack-73b6b1d6cfd7c728f1f4b3472575fd66d9279e60.pack
diff -r ../FCFC/.git/ORIG_HEAD ./.git/ORIG_HEAD
1c1
< 652f13094618490a02aceb63a3ee67c3c54aca5b
---
> 0a4d34e5537d8d99cbbeea9e2e5e86f43133e1e7
Only in ../FCFC/.git: packed-refs
diff -r ../FCFC/.git/refs/heads/master ./.git/refs/heads/master
1c1
< 5d846996d5dfca36c8dee5015427757735c149f2
---
> 0a4d34e5537d8d99cbbeea9e2e5e86f43133e1e7
Only in ../FCFC/.git/refs/remotes/origin: HEAD
diff -r ../FCFC/io/read_file.h ./io/read_file.h
40c40,41
<   FCFC_FFMT_FITS = 1
---
>   FCFC_FFMT_FITS = 1,
>   FCFC_FFMT_HDF5 = 2
79a81,84
> 
> int read_hdf5_data(const char *fname, const char *groupname, char *const *pos, const char *wt, const char *sel,
>     DATA **data, size_t *num, const int verb);
> 
Only in ./io: read_hdf5.c
diff -r ../FCFC/Makefile ./Makefile
1c1
< CC = gcc
---
> CC = cc
diff -r ../FCFC/src/2pt/build_tree.c ./src/2pt/build_tree.c
53,59c53,66
<   const size_t skip = (conf->skip) ? conf->skip[idx] : DEFAULT_ASCII_SKIP;
<   const char cmt = (conf->comment) ? conf->comment[idx] : DEFAULT_ASCII_COMMENT;
<   const char *wt = (conf->has_wt[idx]) ? conf->wt[idx] : NULL;
<   const char *sel = (conf->sel) ? conf->sel[idx] : NULL;
<   if (sel && ((sel[0] == '\'' && sel[1] == '\'') ||
<       (sel[0] == '"' && sel[1] == '"')) && sel[2] == '\0') sel = NULL;
<   if (read_ascii_data(conf->input[idx], skip, cmt, conf->fmtr[idx],
---
>   if (conf->ftype[idx] == 0) {
>     const size_t skip = (conf->skip) ? conf->skip[idx] : DEFAULT_ASCII_SKIP;
>     const char cmt = (conf->comment) ? conf->comment[idx] : DEFAULT_ASCII_COMMENT;
>     const char *wt = (conf->has_wt[idx]) ? conf->wt[idx] : NULL;
>     const char *sel = (conf->sel) ? conf->sel[idx] : NULL;
>     if (read_ascii_data(conf->input[idx], skip, cmt, conf->fmtr[idx],
>         conf->pos + idx * 3, wt, sel, cf->data + idx, cf->ndata + idx,
>         conf->verbose)) return NULL;
>   }
>   else if (conf->ftype[idx] == 2) { 
>     const char *wt = (conf->has_wt[idx]) ? conf->wt[idx] : NULL;
>     const char *sel = (conf->sel) ? conf->sel[idx] : NULL;
>     
>     if (read_hdf5_data(conf->input[idx], conf->group[idx],
61a69
>   }
diff -r ../FCFC/src/2pt/init_cf.c ./src/2pt/init_cf.c
174d173
< 
diff -r ../FCFC/src/2pt/load_conf.c ./src/2pt/load_conf.c
106a107,108
>   -g, --group           " FMT_KEY(HDF5_GROUP) "      String array\n\
>         The name of the group from the HDF5 file\n\
207c209,210
<     # * %d: FITS table.\n\
---
>     # * %d: FITS table;\n\
>     # * %d: HDF5 file.\n\
220a224,225
> HDF5_GROUP = \n\
>     # The name of the group from the HDF5 file. String array.\n\
349c354
<       DEFAULT_FILE_TYPE, FCFC_FFMT_ASCII, FCFC_FFMT_FITS,
---
>       DEFAULT_FILE_TYPE, FCFC_FFMT_ASCII, FCFC_FFMT_FITS, FCFC_FFMT_HDF5,
377c382
<   conf->input = conf->fmtr = conf->pos = conf->wt = conf->sel = NULL;
---
>   conf->input = conf->fmtr = conf->group = conf->pos = conf->wt = conf->sel = NULL;
413c418
<   const int npar = 38;
---
>   const int npar = 39;
421a427
>     {'g', "group"       , "HDF5_GROUP"     , CFG_ARRAY_STR , &conf->group   },
672a679
>   conf->hdf5 = false;
686a694,696
>       case FCFC_FFMT_HDF5:
>         conf->hdf5 = true;
>         break;
727a738,743
>   /* HDF5_GROUP */
>   if (conf->hdf5) {
>     CHECK_EXIST_ARRAY(HDF5_GROUP, cfg, &conf->group, num);
>     CHECK_STR_ARRAY_LENGTH(HDF5_GROUP, cfg, conf->group, num, conf->ninput);
>   }
> 
1083c1099
<   const char *ftype[2] = {"ASCII", "FITS"};
---
>   const char *ftype[3] = {"ASCII", "FITS", "HDF5"};
1126a1143,1148
>   if (conf->hdf5) {
>     printf("\n  HDF5_GROUP = %s", conf->group[0]);
>     for (int i = 1; i < conf->ninput; i++)
>       printf("\n                    %s", conf->group[i]);
>   }
> 
1290a1313
>   FREE_STR_ARRAY(conf->group);
diff -r ../FCFC/src/2pt/load_conf.h ./src/2pt/load_conf.h
44a45
>   bool hdf5;            /* Indicate whether there are HDF5 catalogues. */
49a51
>   char **group;          /* HDF5_GROUP           */
diff -r ../FCFC/src/2pt_box/build_tree.c ./src/2pt_box/build_tree.c
52a53,69
> 
>   if (conf->ftype[idx] == 0) {
>     const size_t skip = (conf->skip) ? conf->skip[idx] : DEFAULT_ASCII_SKIP;
>     const char cmt = (conf->comment) ? conf->comment[idx] : DEFAULT_ASCII_COMMENT;
>     const char *sel = (conf->sel) ? conf->sel[idx] : NULL;
>     if (read_ascii_data(conf->input[idx], skip, cmt, conf->fmtr[idx],
>         conf->pos + idx * 3, NULL, sel, cf->data + idx, cf->ndata + idx,
>         conf->verbose)) return NULL;
>   }
>   else if (conf->ftype[idx] == 2) { 
>     const char *sel = (conf->sel) ? conf->sel[idx] : NULL;
>     
>     if (read_hdf5_data(conf->input[idx], conf->group[idx],
>       conf->pos + idx * 3, NULL, sel, cf->data + idx, cf->ndata + idx,
>       conf->verbose)) return NULL;
>   }
> 
diff -r ../FCFC/src/2pt_box/load_conf.c ./src/2pt_box/load_conf.c
106a107,108
>   -g, --group           " FMT_KEY(HDF5_GROUP) "      String array\n\
>         The name of the group from the HDF5 file\n\
195c197,198
<     # * %d: FITS table.\n\
---
>     # * %d: FITS table;\n\
>     # * %d: HDF5 file.\n\
208a212,213
> HDF5_GROUP = \n\
>     # The name of the group from the HDF5 file. String array.\n\
312c317
<       DEFAULT_FILE_TYPE, FCFC_FFMT_ASCII, FCFC_FFMT_FITS,
---
>       DEFAULT_FILE_TYPE, FCFC_FFMT_ASCII, FCFC_FFMT_FITS, FCFC_FFMT_HDF5,
338c343
<   conf->input = conf->fmtr = conf->pos = conf->sel = NULL;
---
>   conf->input = conf->fmtr = conf->group = conf->pos = conf->sel = NULL;
373c378
<   const int npar = 32;
---
>   const int npar = 33;
381a387
>     {'g', "group"       , "HDF5_GROUP"     , CFG_ARRAY_STR , &conf->group   },
580a587
>   conf->hdf5 = false;
594a602,604
>       case FCFC_FFMT_HDF5:
>         conf->hdf5 = true;
>         break;
635a646,651
>   /* HDF5_GROUP */
>   if (conf->hdf5) {
>     CHECK_EXIST_ARRAY(HDF5_GROUP, cfg, &conf->group, num);
>     CHECK_STR_ARRAY_LENGTH(HDF5_group, cfg, conf->group, num, conf->ninput);
>   }
> 
931c947
<   const char *ftype[2] = {"ASCII", "FITS"};
---
>   const char *ftype[3] = {"ASCII", "FITS", "HDF5"};
974a991,996
>   if (conf->hdf5) {
>     printf("\n  HDF5_GROUP = %s", conf->group[0]);
>     for (int i = 1; i < conf->ninput; i++)
>       printf("\n                    %s", conf->group[i]);
>   }
> 
1114a1137
>   FREE_STR_ARRAY(conf->group);
diff -r ../FCFC/src/2pt_box/load_conf.h ./src/2pt_box/load_conf.h
44a45
>   bool hdf5;            /* Indicate whether there are HDF5 catalogues. */
49a51
>   char **group;          /* HDF5_GROUP           */
diff -r ../FCFC/src/define_comm.h ./src/define_comm.h
34a35
> #include "hdf5.h"
40a42,43
>   #define H5T_REAL H5T_NATIVE_FLOAT
> 
52a56,57
>   #define H5T_REAL H5T_NATIVE_DOUBLE
> 
